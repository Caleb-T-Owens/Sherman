---
/**
 * LastUpdated Component
 *
 * Displays the last updated date for a file based on filesystem modification time.
 * Formats dates in the style: "27th October 2024"
 *
 * Usage in MDX files:
 * ```mdx
 * ---
 * layout: ../layouts/MainLayout.astro
 * ---
 *
 * import LastUpdated from '../components/LastUpdated.astro';
 *
 * <LastUpdated filePath="src/pages/index.mdx" />
 * ```
 *
 * Note: The filePath should be relative to the project directory (projects/website4).
 */

import fs from "fs";
import path from "path";

interface Props {
  /**
   * File path to check modification time for.
   * Should be relative to the project root (projects/website4).
   * Example: "src/pages/index.mdx"
   */
  filePath: string;
}

const { filePath } = Astro.props;

/**
 * Get the last modified date for a file from filesystem
 * @param filePath - The file path relative to project root
 * @returns ISO date string or null if not found
 */
function getLastModifiedDate(filePath: string): string | null {
  try {
    // Construct full path from current working directory
    const fullPath = path.join(process.cwd(), filePath);

    // Get the file stats
    const stats = fs.statSync(fullPath);

    // Return the modification time in ISO format
    return stats.mtime.toISOString();
  } catch (error) {
    console.error(`Failed to get modification time for ${filePath}:`, error);
    return null;
  }
}

/**
 * Format a date in the style: "27th October 2024"
 * @param dateString - ISO date string
 * @returns Formatted date string
 */
function formatDate(dateString: string): string {
  const date = new Date(dateString);

  // Get day with ordinal suffix (1st, 2nd, 3rd, etc.)
  const day = date.getDate();
  const ordinal = getOrdinal(day);

  // Get month name
  const monthNames = [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December",
  ];
  const month = monthNames[date.getMonth()];

  // Get year
  const year = date.getFullYear();

  return `${day}${ordinal} ${month} ${year}`;
}

/**
 * Get the ordinal suffix for a day number
 * @param day - Day of the month (1-31)
 * @returns Ordinal suffix (st, nd, rd, th)
 */
function getOrdinal(day: number): string {
  if (day > 3 && day < 21) return "th";
  switch (day % 10) {
    case 1:
      return "st";
    case 2:
      return "nd";
    case 3:
      return "rd";
    default:
      return "th";
  }
}

// Get filesystem modification date using the file path relative to project root
const modifiedDate = getLastModifiedDate(filePath);

// Format for display
const isoDate = modifiedDate
  ? modifiedDate.split("T")[0]
  : new Date().toISOString().split("T")[0];
const displayDate = modifiedDate ? formatDate(modifiedDate) : null;
---

{
  displayDate ? (
    <p>
      Last updated <time datetime={isoDate}>{displayDate}</time>
    </p>
  ) : (
    <p>
      <em>Last updated date unavailable</em>
    </p>
  )
}
